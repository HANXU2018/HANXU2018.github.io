<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://HANXU2018.github.io</id>
    <title>HANXU2018 blog</title>
    <updated>2020-05-24T02:36:33.979Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://HANXU2018.github.io"/>
    <link rel="self" href="https://HANXU2018.github.io/atom.xml"/>
    <subtitle>Han xu&apos;s personal blog</subtitle>
    <logo>https://HANXU2018.github.io/images/avatar.png</logo>
    <icon>https://HANXU2018.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, HANXU2018 blog</rights>
    <entry>
        <title type="html"><![CDATA[Docker Install Tomcat]]></title>
        <id>https://HANXU2018.github.io/8Yn9NSlmJ/</id>
        <link href="https://HANXU2018.github.io/8Yn9NSlmJ/">
        </link>
        <updated>2020-05-23T15:12:24.000Z</updated>
        <summary type="html"><![CDATA[<p>In the past study，I know two ways to install Tomcat with Docker</p>
<ol>
<li>
<p>docker pull tomcat</p>
<ul>
<li>that can find the Tomcat image on Docker Hub</li>
</ul>
</li>
<li>
<p>Build with Dockerfile</p>
<ul>
<li>I'm not very good at it but this is important.I'll probably write a separate blog about this approach</li>
</ul>
</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<p>In the past study，I know two ways to install Tomcat with Docker</p>
<ol>
<li>
<p>docker pull tomcat</p>
<ul>
<li>that can find the Tomcat image on Docker Hub</li>
</ul>
</li>
<li>
<p>Build with Dockerfile</p>
<ul>
<li>I'm not very good at it but this is important.I'll probably write a separate blog about this approach</li>
</ul>
</li>
</ol>
<!-- more -->
<h1 id="i-will-record-the-docker-install-tomcat-with-dockerhub-in-this-time">I will record the docker install tomcat with dockerhub in this time.</h1>
<h2 id="1search-the-image-in-docker-hub">1.search the image in docker hub</h2>
<p>https://hub.docker.com/_/tomcat<br>
i can see the commant <code>docker pull tomcat</code><br>
Copy and paste to pull this image</p>
<ul>
<li><code>docker search tomcat</code> that can search the version that can install in our device.</li>
</ul>
<h2 id="docker-pull-tomcat">docker pull tomcat</h2>
<p>i use this to pull the image from dockerhub<br>
when finished <code>docker pull tomcat</code> can see the images that have been downloaded</p>
<ul>
<li>In China the average home already has 100 megabits of Internet speed,but the speed of visiting foreign websites is always extremely slow.</li>
<li>thanks for the Chinese Unicorn company like alibaba that can let every one to use their mirrors to speed up.</li>
</ul>
<h2 id="use-tomcat-images">Use tomcat images</h2>
<p>run this comman</p>
<pre><code>docker run --name tomcat -p 8080:8080 -v /test:/usr/local/tomcat/webapps/test -d tomcat  
</code></pre>
<p>because of i use WIN10 this time i want to share the folder test in tomcat so i do this , but if we use linux we can user this</p>
<pre><code>docker run --name tomcat -p 8080:8080 -v $PWD/test:/usr/local/tomcat/webapps/test -d tomcat  
</code></pre>
<ol>
<li>-p 8080:8080 Map port 8080 of the container to port 8080 of the host.</li>
<li>-v $PWD/test:/usr/local/tomcat/webapps/test Mount the test in the current directory on the host to the container's /test</li>
</ol>
<h2 id="docker-ps">docker ps</h2>
<p>Check for success,if success ,we will see the tomcat container running.</p>
<h2 id="visit-the-localhost8080-check-the-tomcat-running-condition">visit the localhost:8080 check the tomcat running condition</h2>
<p>if can you see someting about tomcat on website that you run successfuly.</p>
<h2 id="some-of-the-problems-i-had">Some of the problems I had</h2>
<p>when i visit the 8080 ,A 404 error occurred.But I realized that tomcat was running successfully.<br>
when i use <code>docker exec -it 68c241f24239 /bin/bash</code><br>
Enter the tomcat container<br>
use <code>ls -l</code><br>
see that has two folders webapps and webapps.dist<br>
<code>cd webapps</code> open this folder use <code>ls -l</code> see that it'a empty folder<br>
<code>cd ../webapps.dist</code> change to this folder taht <code>ls -l</code><br>
see the Root and other files in this folder<br>
The tomcat default welcome page is actually placed in the path.<br>
For demonstration purposes i use <code>mv Root ../webapps</code><br>
Move the files from the default welcome screen to webapps<br>
then vist the <code>localhost:8080</code> can see the welcome page</p>
<p>The good news is that I learned the simple principles of tomcat when I was studying the Java web.<br>
Otherwise it will take more time to deal with the problem.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ [Learn GO] basic knowledge]]></title>
        <id>https://HANXU2018.github.io/J8sTwmxBz/</id>
        <link href="https://HANXU2018.github.io/J8sTwmxBz/">
        </link>
        <updated>2020-05-22T09:37:19.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="basic-knowledge">basic knowledge</h1>
<ul>
<li>constant</li>
<li>variable</li>
<li>integer</li>
<li>floating-point</li>
<li>bool</li>
<li>string</li>
<li>character</li>
<li>Arrays and slices</li>
<li>package</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h1 id="basic-knowledge">basic knowledge</h1>
<ul>
<li>constant</li>
<li>variable</li>
<li>integer</li>
<li>floating-point</li>
<li>bool</li>
<li>string</li>
<li>character</li>
<li>Arrays and slices</li>
<li>package</li>
</ul>
<!-- more -->
<h1 id="basic-knowledge-2">basic knowledge</h1>
<h2 id="constant">constant</h2>
<ul>
<li>const</li>
</ul>
<pre><code>const limit = 512
const top uint16 = 1421
const Pi float64 = 3.1415926
const x,y int = 1,3 
</code></pre>
<p>also can write in this way</p>
<pre><code>const (
    Cyan = 0
    Black = 1
    White = 2
)
</code></pre>
<p><code>true</code> <code>false</code> <code>iota</code>also default in go<br>
itoa it reset to 0 when the const keyword appears<br>
wa~ it's so amazing this type of const</p>
<pre><code>const (
    a = iota  //a == 0
    b = iota  //b ==1
    c = iota  //c == 2
)

const d = iota //d==0
</code></pre>
<h2 id="variable">variable</h2>
<p>some example:</p>
<pre><code>var a int
var b string
var c float64
var d [5] int  //array 
var e [] int   //array slice
var f * int    //right
var v1 int = 5 //right
var v2 = 5     //right it can matching type automatic
v3 := 5        //right it can matching type automatic
</code></pre>
<p>there is a amazing code that can exchange values in this way</p>
<pre><code>i := 2
j := 3
i, j = j, i  //change the value, now i == 3，j == 2
</code></pre>
<p>int c++ or java i will do this things</p>
<pre><code>int t;
t = a;
a = b;
b = a;
</code></pre>
<p>but in go that can in one line i,j = j,i so interesting!</p>
<h2 id="interger">interger</h2>
<p>in go <code>unsafe.Sizeof</code> it's like <code>sizeof</code> int C<br>
Go has 11 types of integer .<br>
Talk is cheap.Show me the code.</p>
<pre><code>package main

import (
    &quot;fmt&quot;
    &quot;unsafe&quot;
)

func main() {
    a := 12
    fmt.Println(&quot;length of a: &quot;, unsafe.Sizeof(a))
    var b int = 12
    fmt.Println(&quot;length of b(int): &quot;, unsafe.Sizeof(b))
    var c int8 = 12
    fmt.Println(&quot;length of c(int8): &quot;, unsafe.Sizeof(c))
    var d int16 = 12
    fmt.Println(&quot;length of d(int16): &quot;, unsafe.Sizeof(d))
    var e int32 = 12
    fmt.Println(&quot;length of e(int32): &quot;, unsafe.Sizeof(e))
    var f int64 = 12
    fmt.Println(&quot;length of f(int64): &quot;, unsafe.Sizeof(f))
}
</code></pre>
<p>The FMT package is used to format strings, and unsafe contains methods for getting information about the Go language type</p>
<h2 id="floating-point">floating-point</h2>
<p>Go has two floating point types and two complex types</p>
<ul>
<li>
<p>float 32</p>
<ul>
<li>The precision is about 7 decimal Numbers after the decimal point</li>
</ul>
</li>
<li>
<p>float 64</p>
<ul>
<li>The precision is about 15 decimal Numbers after the decimal point</li>
</ul>
</li>
<li>
<p>complex32</p>
<ul>
<li>The real and imaginary parts are all float32</li>
</ul>
</li>
<li>
<p>complex64</p>
<ul>
<li>The real and imaginary parts are all float64</li>
</ul>
</li>
</ul>
<h2 id="bool">bool</h2>
<ul>
<li>bool do not support automatic change and cast type conversion in GO</li>
</ul>
<pre><code>var a bool
a = true
b := (2 == 3) //b will be bool type

//error example
var b bool
b = 1 //error
b = bool(1) // error
</code></pre>
<h2 id="string">string</h2>
<pre><code>t1 := &quot;\&quot;hello\&quot;&quot;             //msg： &quot;hello&quot;
t2 := `&quot;hello&quot;`               //msg：the same as t1
t3 := &quot;\u6B22\u8FCE&quot;          //msg：欢迎
</code></pre>
<p>Go use UTF-8 its a very good way to display Chinese characters.<br>
Strings support many operations,but as the beginner blog i don't want to write it.<br>
that is an example</p>
<pre><code>package main

import (
    &quot;fmt&quot;
)

func main() {
    t0 := &quot;\u6B22\u8FCE\u6765\u5230&quot; // t0内容：欢迎来到
    t1 := &quot;\u5B9E\u9A8C\u697C&quot;       // t1内容：实验楼
    t2 := t0 + t1
    for index, char := range t2 {
        fmt.Printf(&quot;%-2d    %U      '%c'    %X      %d\n&quot;,
            index, char, char, []byte(string(char)), len([]byte(string(char))))
    }
    fmt.Printf(&quot;length of t0: %d, t1: %d, t2: %d\n&quot;, len(t0), len(t1), len(t2))
    fmt.Printf(&quot;content of t2[0:2] is: %X\n&quot;, t2[0:2])
}
</code></pre>
<p>here is the print on screen</p>
<pre><code>$ go run string_t.go
0     U+6B22      '欢'    E6ACA2      3
3     U+8FCE      '迎'    E8BF8E      3
6     U+6765      '来'    E69DA5      3
9     U+5230      '到'    E588B0      3
12    U+5B9E      '实'    E5AE9E      3
15    U+9A8C      '验'    E9AA8C      3
18    U+697C      '楼'    E6A5BC      3
length of t0: 12, t1: 9, t2: 21
content of t2[0:2] is: E6AC
</code></pre>
<h2 id="character">character</h2>
<p>Go has two character One is Byte(utf8) another is rune(Unicode )<br>
Go use byte as usual</p>
<h2 id="arrays-and-slices">Arrays and slices</h2>
<p>Go can automatically calculates the length of the array for us<br>
[length]Type<br>
[N]Type{value1, value2, ..., valueN}<br>
[...]Type{value1, value2, ..., valueN}<br>
... that is so amazing</p>
<ul>
<li>slices is a very good progress i think</li>
</ul>
<pre><code>package main

import (
    &quot;fmt&quot;
)

func main() {
    a := [...]int{1, 2, 3, 4, 5, 6, 7}
    fmt.Printf(&quot;len and cap of array %v is: %d and %d\n&quot;, a, len(a), cap(a))
    fmt.Printf(&quot;item in array: %v is:&quot;, a)
    for _, value := range a {
        fmt.Printf(&quot;% d&quot;, value)
    }

    fmt.Println()

    s1 := a[3:6]
    fmt.Printf(&quot;len and cap of slice: %v is: %d and %d\n&quot;, s1, len(s1), cap(s1))
    fmt.Printf(&quot;item in slice: %v is:&quot;, s1)
    for _, value := range s1 {
        fmt.Printf(&quot;% d&quot;, value)
    }

    fmt.Println()

    s1[0] = 456
    fmt.Printf(&quot;item in array changed after changing slice: %v is:&quot;, s1)
    for _, value := range a {
        fmt.Printf(&quot;% d&quot;, value)
    }

    fmt.Println()

    s2 := make([]int, 10, 20)
    s2[4] = 5
    fmt.Printf(&quot;len and cap of slice: %v is: %d and %d\n&quot;, s2, len(s2), cap(s2))
    fmt.Printf(&quot;item in slice %v is:&quot;, s2)
    for _, value := range s2 {
        fmt.Printf(&quot;% d&quot;, value)
    }

    fmt.Println()
}
</code></pre>
<p>The print information</p>
<pre><code>$  go run slice_array.go
len and cap of array [1 2 3 4 5 6 7] is: 7 and 7
item in array: [1 2 3 4 5 6 7] is: 1 2 3 4 5 6 7
len and cap of slice: [4 5 6] is: 3 and 4
item in slice: [4 5 6] is: 4 5 6
item in array changed after changing slice: [456 5 6] is: 1 2 3 456 5 6 7
len and cap of slice: [0 0 0 0 5 0 0 0 0 0] is: 10 and 20
item in slice [0 0 0 0 5 0 0 0 0 0] is: 0 0 0 0 5 0 0 0 0 0
</code></pre>
<h2 id="package">package</h2>
<p>Packages are collections of various types and functions</p>
<ul>
<li>$GOPATH
<ul>
<li>$GOPATH's SRC directory, each package is placed in a separate directory. It can be share in all code.</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Learn GO] Hello world]]></title>
        <id>https://HANXU2018.github.io/3s3W8n_md/</id>
        <link href="https://HANXU2018.github.io/3s3W8n_md/">
        </link>
        <updated>2020-05-22T08:34:13.000Z</updated>
        <summary type="html"><![CDATA[<p>I touched on docker a few weeks ago. I knew it code by go language. So i tried hello world with go as a  taste,maybe it's not the right things to do ,but i want to try.</p>
]]></summary>
        <content type="html"><![CDATA[<p>I touched on docker a few weeks ago. I knew it code by go language. So i tried hello world with go as a  taste,maybe it's not the right things to do ,but i want to try.</p>
<!-- more -->
<h1 id="make-a-file-hellogo">make a file hello.go</h1>
<pre><code>package main

import (
    &quot;fmt&quot; //导入fmt包，调用其中的Println()函数
)

func main() {
    fmt.Println(&quot;Hello，world！&quot;)
}
</code></pre>
<h1 id="run-the-code">run the code</h1>
<p>open the terminal and Enter this command<br>
<code>go run hello.go</code><br>
wo~ it's a good test.</p>
<h1 id="basic-knowledge">basic knowledge</h1>
<ul>
<li>constant</li>
<li>variable</li>
<li>floating-point</li>
<li>string</li>
<li>character</li>
<li>Arrays and slices</li>
<li>package</li>
</ul>
<p>i will record it in next blog</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Docker Practical learning] 09 Build my own Docker Registry]]></title>
        <id>https://HANXU2018.github.io/TAWNI60TK/</id>
        <link href="https://HANXU2018.github.io/TAWNI60TK/">
        </link>
        <updated>2020-05-21T13:03:48.000Z</updated>
        <summary type="html"><![CDATA[<p>I try to do this things in this Docker learning</p>
<ol>
<li>Deployment and configuration of Docker Registry</li>
<li>Use Registry to manage the repository and image</li>
<li>The configuration of Docker Registry</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<p>I try to do this things in this Docker learning</p>
<ol>
<li>Deployment and configuration of Docker Registry</li>
<li>Use Registry to manage the repository and image</li>
<li>The configuration of Docker Registry</li>
</ol>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Docker Practical learning] 08 Docker Run Wordpress]]></title>
        <id>https://HANXU2018.github.io/T-JYUS0LD/</id>
        <link href="https://HANXU2018.github.io/T-JYUS0LD/">
        </link>
        <updated>2020-05-19T01:54:03.000Z</updated>
        <summary type="html"><![CDATA[<p>I will add the previous content as soon as possible in the future.<br>
Today, learn how dockerfile and docker work through the WordPress container.<br>
I will record the following things</p>
<ol>
<li>WordPress installation and configuration</li>
<li>Dockerfil write</li>
<li>Dockerfil builds the image</li>
</ol>
<p>let't try!🙋‍♂</p>
]]></summary>
        <content type="html"><![CDATA[<p>I will add the previous content as soon as possible in the future.<br>
Today, learn how dockerfile and docker work through the WordPress container.<br>
I will record the following things</p>
<ol>
<li>WordPress installation and configuration</li>
<li>Dockerfil write</li>
<li>Dockerfil builds the image</li>
</ol>
<p>let't try!🙋‍♂</p>
<!-- more -->
<h1 id="preparation-before-experiment">Preparation before experiment</h1>
<ol>
<li>Replace aliyun image in China to speed up</li>
</ol>
<pre><code>sudo vi /etc/docker/daemon.json
</code></pre>
<pre><code>{
 &quot;registry-mirrors&quot;: [&quot;https://n6syp70m.mirror.aliyuncs.com&quot;]
}
</code></pre>
<ol start="2">
<li>Restart docker service</li>
</ol>
<pre><code>sudo service docker restart
</code></pre>
<h1 id="commencement-of-operation">commencement of operation</h1>
<ol>
<li>
<p>Analyze the environment required for the experiment</p>
<ol>
<li>Nginx provides access</li>
<li>SSH for easy management</li>
<li>PHP and mysql as dependencies</li>
<li>Finally, install wordpress</li>
</ol>
</li>
<li>
<p>China docker image speed up</p>
<ol>
<li><code>RUN echo &quot;deb http://mirrors.cloud.aliyuncs.com/ubuntu/ trusty main universe&quot; &gt; /etc/apt/sources.list</code></li>
<li>I use the online learning environment using image to mirrors.cloud.aliyuncs.com,but in our own device we should use mirrors.aliyun.com.</li>
</ol>
</li>
<li>
<p>Create Dockerfile</p>
<ol>
<li>
<p>make a folder and create Dockerfile</p>
<pre><code>$ mkdir wordpress
$ cd wordpress
$ touch Dockerfile
</code></pre>
</li>
<li>
<p>edit the Dockerfile</p>
<pre><code>vim Dockerfile
</code></pre>
<p>The basic framework of previous studies</p>
<pre><code># Version 0.1

# basic image
FROM ubuntu:14.04

# MAINTAINER 
MAINTAINER HANXU2018@HANXU2018.com

# Command 
RUN echo &quot;deb http://mirrors.cloud.aliyuncs.com/ubuntu/ trusty main universe&quot; &gt; /etc/apt/sources.list
RUN apt-get -yqq update &amp;&amp; apt-get install -yqq supervisor &amp;&amp; apt-get clean

# start command
CMD [&quot;supervisord&quot;]
</code></pre>
<p>use Supervisord to start</p>
</li>
</ol>
</li>
<li>
<p>complete Dockerfile</p>
<ol>
<li>Install dependencies
<ol>
<li>nginx system service</li>
<li>php and mysql wordpress dependencies</li>
</ol>
</li>
</ol>
<pre><code>    RUN apt-get -yqq install nginx supervisor wget php5-fpm php5-mysql
</code></pre>
<ol start="2">
<li>
<p>Install Wordpress</p>
<ol>
<li>Create the directory for the installation<br>
<code>RUN mkdir -p /var/www</code></li>
<li>download and uzip<pre><code>ADD http://labfile.oss-cn-hangzhou-internal.aliyuncs.com/courses/498/wordpress-4.4.2.tar.gz /var/www/wordpress-4.4.2.tar.gz
   RUN cd /var/www &amp;&amp; tar zxvf wordpress-4.4.2.tar.gz &amp;&amp; rm -rf wordpress-4.4.2.tar.gz
   RUN chown -R www-data:www-data /var/www/wordpress
</code></pre>
</li>
</ol>
</li>
<li>
<p>Install SSH</p>
<ol>
<li>Install dependencies and SSH<br>
<code>RUN apt-get install -y openssh-server openssh-client</code></li>
<li>create Run directory<br>
<code>RUN mkdir /var/run/sshd</code></li>
<li>Configure password and allow remote login<pre><code>RUN echo 'root:shiyanlou' | chpasswd
RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
</code></pre>
</li>
</ol>
</li>
<li>
<p>Install Mysql</p>
<ol>
<li>config root password and install<pre><code>RUN echo &quot;mysql-server mysql-server/root_password password shiyanlou&quot; | debconf-set-selections
RUN echo &quot;mysql-server mysql-server/root_password_again password shiyanlou&quot; | debconf-set-selections
RUN apt-get  install -y mysql-server mysql-client
</code></pre>
</li>
<li>create database for wordpress<br>
<code>RUN service mysql start &amp;&amp; mysql -uroot -pshiyanlou -e &quot;create database wordpress;&quot;</code>.</li>
</ol>
</li>
<li>
<p>open 80 22 port</p>
<ol>
<li>80:web</li>
<li>22:ssh</li>
<li><code>EXPOSE 80 22</code></li>
</ol>
</li>
<li>
<p>config Supervisord</p>
<ol>
<li>
<p><code>vim supervisord.conf</code> create conf</p>
</li>
<li>
<pre><code>  [supervisord]
    nodaemon=true

    [program:php5-fpm]
    command=/usr/sbin/php5-fpm -c /etc/php5/fpm
    autorstart=true

    [program:mysqld]
    command=/usr/bin/mysqld_safe

    [program:nginx]
    command=/usr/sbin/nginx
    autorstart=true

    [program:ssh]
    command=/usr/sbin/sshd -D
</code></pre>
</li>
<li>
<p>add Suervisord in Dockerfile</p>
<ol>
<li><code>COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf</code></li>
</ol>
</li>
<li>
<p>start Supervisord</p>
<ol>
<li><code>CMD [&quot;/usr/bin/supervisord&quot;]</code></li>
</ol>
</li>
</ol>
</li>
<li>
<p>config Nginx</p>
<ol>
<li>like config Supervisord <code>vim nginx-config</code></li>
<li>
<pre><code>
 server {
     listen *:80;
     server_name localhost;

     root /var/www/wordpress;
     index index.php;

     location / {
         try_files $uri $uri/ /index.php?$args;
     }

     location ~ \.php$ {
         try_files $uri =404;
         include fastcgi_params;
         fastcgi_pass unix:/var/run/php5-fpm.sock;
     }
 }
</code></pre>
</li>
</ol>
</li>
<li>
<p>WordPress config</p>
<ol>
<li>Use sed add this in Dockerfile<pre><code>RUN sed -i 's/database_name_here/wordpress/g' /var/www/wordpress/wp-config-sample.php
RUN sed -i 's/username_here/root/g' /var/www/wordpress/wp-config-sample.php
RUN sed -i 's/password_here/shiyanlou/g' /var/www/wordpress/wp-config-sample.php
RUN mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php
</code></pre>
</li>
</ol>
</li>
<li>
<p>update the config file int Dockerfile</p>
<ol>
<li><code>COPY nginx-config /etc/nginx/sites-available/default</code></li>
</ol>
</li>
</ol>
</li>
<li>
<p>docker build</p>
<ol>
<li>befor build i show the complete Dockerfile</li>
</ol>
<pre><code>     # Version 0.1
     FROM ubuntu:14.04

     MAINTAINER HANXU2018@HANXU2018.com

     RUN echo &quot;deb http://mirrors.cloud.aliyuncs.com/ubuntu/ trusty main universe&quot; &gt; /etc/apt/sources.list
     RUN apt-get -yqq update
     RUN apt-get -yqq install nginx supervisor wget php5-fpm php5-mysql
     RUN echo &quot;daemon off;&quot; &gt;&gt; /etc/nginx/nginx.conf

     RUN mkdir -p /var/www
     ADD http://labfile.oss-cn-hangzhou-internal.aliyuncs.com/courses/498/wordpress-4.4.2.tar.gz /var/www/wordpress-4.4.2.tar.gz
     RUN cd /var/www &amp;&amp; tar zxvf wordpress-4.4.2.tar.gz &amp;&amp; rm -rf wordpress-4.4.2.tar.gz
     RUN chown -R www-data:www-data /var/www/wordpress

     RUN mkdir /var/run/sshd
     RUN apt-get install -yqq openssh-server openssh-client
     RUN echo 'root:shiyanlou' | chpasswd
     RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config

     RUN echo &quot;mysql-server mysql-server/root_password password shiyanlou&quot; | debconf-set-selections
     RUN echo &quot;mysql-server mysql-server/root_password_again password shiyanlou&quot; | debconf-set-selections
     RUN apt-get  install -yqq mysql-server mysql-client

     EXPOSE 80 22

     COPY nginx-config /etc/nginx/sites-available/default
     COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
     RUN service mysql start &amp;&amp; mysql -uroot -pshiyanlou -e &quot;create database wordpress;&quot;
     RUN sed -i 's/database_name_here/wordpress/g' /var/www/wordpress/wp-config-sample.php
     RUN sed -i 's/username_here/root/g' /var/www/wordpress/wp-config-sample.php
     RUN sed -i 's/password_here/shiyanlou/g' /var/www/wordpress/wp-config-sample.php
     RUN mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php

     CMD [&quot;/usr/bin/supervisord&quot;]
</code></pre>
<ol start="2">
<li>make sure you have Dockerfile nginx-config and supervisord.conf three fils</li>
<li>docker build
<ol>
<li><code>docker build -t wordpress:0.2 /home/shiyanlou/wordpress/</code></li>
</ol>
</li>
</ol>
</li>
<li>
<p><code>docker images</code> can see the images we build just now.</p>
</li>
<li>
<p>docker run for test</p>
<ol>
<li><code>docker run -d -p 80:80 --name wordpress wordpress:0.2</code></li>
<li><code>docker container ls</code> can see the container we run</li>
<li>vist the website 127.0.0.1/wp-admin/install.php on the browser. if success we will see the install pages.</li>
</ol>
</li>
</ol>
<h1 id="summary">summary</h1>
<ol>
<li>WordPress installation and configuration</li>
<li>Dockerfil write</li>
<li>Dockerfil builds the image<br>
With the help of the learning website, my progress is very fast,This blog was also written with the help of a tutorial.Writing a blog felt like a lot of work, but I stuck with it.<br>
My basic knowledge is still unfamiliar, so it will be difficult to do the experiment.<br>
I will try to practice the basics as much as possible.<br>
If you have any questions, please contact me.</li>
</ol>
<h1 id="contact">contact 🔗</h1>
<p>My github is <a href="https://github.com/HANXU2018">@HANXU2018</a><br>
My Chinese blog in CSDN site https://hanxu.blog.csdn.net/<br>
✉️ google email h1076998404@Gmial.com<br>
📪QQ mailbox can get my reply faster<br>
1076998404@qq.com</p>
<p>thanks<br>
2020/5/19<br>
🤝🤝🤝</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Docker Practical learning] 01 The basic concepts of docker]]></title>
        <id>https://HANXU2018.github.io/ucr0ay4MB/</id>
        <link href="https://HANXU2018.github.io/ucr0ay4MB/">
        </link>
        <updated>2020-05-18T13:11:18.000Z</updated>
        <summary type="html"><![CDATA[<p>🐳 The content of docker's preliminary learning</p>
<ol>
<li>Basic concepts of Docker</li>
<li>Install the Docker</li>
<li>Docker runs Hello World</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<p>🐳 The content of docker's preliminary learning</p>
<ol>
<li>Basic concepts of Docker</li>
<li>Install the Docker</li>
<li>Docker runs Hello World</li>
</ol>
<!-- more -->
<h1 id="the-background-of-the-docker">The background of the docker</h1>
<ul>
<li><a href="https://www.infoq.cn/article/docker-core-technology-preview/">🔗link : Docker Core technology preview</a></li>
<li>Before learning docker, I first learned about his historical background, which is of great help to my study.</li>
<li>Understanding the history can more quickly understand the direction of the development of technology and the essence of the way to use</li>
<li>This article introduces the technological development process of Docker, the core technologies in Docker and the related sub-projects, which is a good introduction.</li>
</ul>
<h1 id="basic-concepts-of-docker">Basic concepts of Docker</h1>
<h2 id="container-technology">Container technology</h2>
<ul>
<li>The core ideas : Build once, Run anywhere.</li>
<li>Build,Ship and Run</li>
<li>Docker basic LXC developed by the go language.</li>
<li>Open source licenses :Apache2.0</li>
</ul>
<h2 id="mirror-container-repository">Mirror container repository</h2>
<ul>
<li>
<p>images</p>
<ul>
<li>Similar to a virtual machine images,Read-only template-independent file system</li>
<li>Can create container</li>
<li>Build based on DockerFile</li>
<li>It can be downloaded from Docker Hub(Docker Hub is similar to GitHub)</li>
</ul>
</li>
<li>
<p>container</p>
<ul>
<li>Similar to a virtual machine,can start stop delete ...</li>
<li>Isolated from each other but not as effective as virtual machines</li>
<li>Control Groups and Namespace  Implement isolation
<ul>
<li>CGroups: Access restrictions on CPU, memory, disk, and other resources</li>
<li>Namespaces :Provides isolation of system resources: processes, networks, file systems, and so on.</li>
</ul>
</li>
</ul>
</li>
<li>
<p>repository</p>
<ul>
<li>It's very similar to Git and GitHub that we learned about before.</li>
<li>Registry can save images .Docker Hub It's so like a Git Hub.</li>
<li>Docker supports push and poll like Git。</li>
</ul>
</li>
</ul>
<h2 id="install-the-docker-on-ubuntu">Install the docker on Ubuntu</h2>
<ul>
<li>Docker have two types Community Edition(CE) and Enterprise Edition(EE), i select CE install on Ubuntu18.04</li>
</ul>
<ol>
<li>
<p>Update software</p>
<pre><code> sudo apt-get update
</code></pre>
</li>
<li>
<p>apt-get some tools</p>
<pre><code>sudo apt-get -y install \
 apt-transport-https \
 ca-certificates \
 curl \
 software-properties-common
</code></pre>
</li>
<li>
<p>China's special network adds a mirror image of aliyun</p>
<pre><code>curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;
</code></pre>
</li>
<li>
<p>install  docker-engine</p>
<pre><code>  sudo apt-cache madison docker-engine
  sudo apt-get remove docker docker-engine docker.io
  sudo apt-get install docker-ce
</code></pre>
<ul>
<li>Check to see if the right version is available</li>
<li>remove the docker if out server already has a docker</li>
<li>Finally, the official installation of docker-ce</li>
</ul>
</li>
<li>
<p>we can check the docker version</p>
<pre><code>docker version
</code></pre>
</li>
<li>
<p>China USES mirror access to speed up</p>
<ol>
<li>edit /etc/docker/daemon.json<br>
<code>sudo vi /etc/docker/daemon.json</code></li>
</ol>
</li>
</ol>
<pre><code>{
 &quot;registry-mirrors&quot;: [&quot;https://n6syp70m.mirror.aliyuncs.com&quot;]
}
</code></pre>
<ol start="2">
<li>sudo service docker restart</li>
</ol>
<h2 id="try-helloword-with-docker">Try helloword with docker</h2>
<p><code>docker container run hello-world</code><br>
run that command the docker will run and print hello world in terminal</p>
<h2 id="conclusion">conclusion</h2>
<p>🐳 The content of docker's preliminary learning</p>
<ol>
<li>Basic concepts of Docker</li>
<li>Install the Docker</li>
<li>Docker runs Hello World</li>
</ol>
<ul>
<li>This is the first time for me to record my study notes in English.</li>
<li>I'm trying really hard and I hope it's a good start</li>
<li>I learn docker on this platform <a href="www.shiyanlou.com">www.shiyanlou.com</a> It's not an AD but it works really well in Chinese  The experiment costs one RMB per hour.But <a href="https://labs.play-with-docker.com/">😁play docker with me</a> is free</li>
<li>If you have any questions, please contact me.</li>
</ul>
<h1 id="contact">contact 🔗</h1>
<p>My github is <a href="https://github.com/HANXU2018">@HANXU2018</a><br>
My Chinese blog in CSDN site https://hanxu.blog.csdn.net/<br>
✉️ google email h1076998404@Gmial.com<br>
📪QQ mailbox can get my reply faster<br>
1076998404@qq.com</p>
<p>thanks<br>
2020/5/18<br>
🤝🤝🤝</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[first] Community Bonding]]></title>
        <id>https://HANXU2018.github.io/fJkHeRSKU/</id>
        <link href="https://HANXU2018.github.io/fJkHeRSKU/">
        </link>
        <updated>2020-05-10T09:22:13.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="intro">intro</h1>
<p>I would like to thank 🙏 the mentors jean-frederic Clere and George Zaronikas for allowing me to participate in the GSoC activities in 2020😁</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="intro">intro</h1>
<p>I would like to thank 🙏 the mentors jean-frederic Clere and George Zaronikas for allowing me to participate in the GSoC activities in 2020😁</p>
<!-- more -->
<h1 id="community-bonding">Community Bonding</h1>
<p>🍻 During Community Bonding, tutor jean-frederic Clere and I had six emails📧 to communicate with each other this week.<br>
It is a good exercise opportunity for me to see the outside world.<br>
It's been a great honor to work with some of the world's top technical mentors.<br>
I think my tutor is very interesting. 😃He not only can give me technical guidance, but also share the situation with me.<br>
For me, it was an all-round growth.👍</p>
<h1 id="schedule-planning">Schedule planning</h1>
<ul>
<li>My tutor suggested me to learn docker to understand and understand the knowledge related to containers.🐳<br>
I think it is a good choice to get to know it as soon as possible.🐋</li>
<li>At present, my main focus is on the course design of database.🐬</li>
<li>I'm trying to control git from the command line.I used git for version control before that.But that's all through the official GitHub visual interface. ☀️<br>
Although it can be used quickly and easily. And it meets my daily needs.<br>
But I think as a technician you still have to learn to use it in a more geeky way.🐵<br>
Not to show off, of course, but to be able to use more advanced features.<br>
And I will definitely use Git's command frequently in the following programming process.🏃<br>
It's My GitHub commit record .I've obviously been using it a lot more recently.</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/05/10/l1CvdRt7gcDYMNE.png" alt="My GitHub commit record" loading="lazy"></figure>
<h1 id="this-weeks-summary">This week's summary</h1>
<ul>
<li>After learning that I was selected to CSoC, I spent a day to understand the requirements of this activity and how to proceed to the next step, trying to contact the tutor and other students from China.It's a very interesting thing.And I got to know a lot of good students from good universities.👬</li>
</ul>
<h2 id="laboratory-building-learning-records"><a href="https://github.com/HANXU2018/shiyanlou">🔗Laboratory building learning records</a>  I created a repository specifically for recording my learning code on a Chinese online programming site</h2>
<ul>
<li>I can learn by coding on the server they provide.A learning log similar to the little green dot on GitHub will be generated.You can check the submission records of my warehouse to see what I have learned recently.</li>
<li>I will also learn the knowledge related to operation and maintenance such as k8s.</li>
</ul>
<h2 id="springbootvuedemo"><a href="https://github.com/huihe524/SpringbootVueDemo">📦SpringbootVueDemo</a></h2>
<ul>
<li>This is the repository I created this afternoon for technology sharing in the school's in-house developer community.Springboot and Vue are techniques I've only recently learned.</li>
<li>I was the technical director of Java development in the school's developer community intelligent river(Because the name of our university is hebei because it is north of the Yellow River,he is River and bei is north in Chinese).</li>
<li>There will be regular technology sharing every weekend, leading junior students to learn.</li>
<li>👫Share your knowledge to improve yourself.No sooner had I learned it than I began to impart my knowledge.I think it's a great workout for me.</li>
<li>I'm also trying to run our community on GitHub and keep a record of every learning experience we share.I think it's great.✨</li>
</ul>
<h2 id="web-security-code-warehouse"><a href="https://github.com/HANXU2018/WebSecurityCourseCode">📦web security Code warehouse </a></h2>
<ul>
<li>I completed the experiment of the web security course and tried to upload it to Github warehouse for the first time to show others the internal learning records of my school.</li>
</ul>
<h1 id="end">end</h1>
<p>😁That's what I'm trying to do this week.I'm sure next week will be better.</p>
<h1 id="to-contact-me">🔗To contact me</h1>
<p>My github is <a href="https://github.com/HANXU2018">@HANXU2018</a><br>
My Chinese blog in CSDN site https://hanxu.blog.csdn.net/<br>
✉️ google email h1076998404@Gmial.com<br>
📪QQ mailbox can get my reply faster<br>
1076998404@qq.com</p>
<p>thanks<br>
2020/5/10<br>
🤝🤝🤝</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AboutMe]]></title>
        <id>https://HANXU2018.github.io/about/</id>
        <link href="https://HANXU2018.github.io/about/">
        </link>
        <updated>2020-05-07T02:33:33.000Z</updated>
        <content type="html"><![CDATA[<p>😁My name is han xu.<br>
I am a student of hebei university in China.🇨🇳<br>
Is an information security sophomore undergraduate (as of May 2020📅).</p>
<p>I'm interested in the open source culture of the github community.<br>
In order to record my learning process, I started this blog.<br>
I like to use LeetCode for code practice every day.<br>
At present, I mainly study the background development knowledge of Java.<br>
I taught myself basic C++ syntax to learn data structures<br>
I have learned C language and python language in school courses and have a little understanding of js<br>
Currently studying database courses, MySQL is the database environment I am using.<br>
Participated in the small program cloud development evangelist activity held by tencent community, tried to develop a simple serverless WeChat small program.<br>
Currently, I use lenovo Y700P to run win10 for daily learning,<br>
but I am interested in the cool and free Linux desktop environment.<br>
I tried to install arch on ubuntu18.04 desktop but failed.<br>
Manjaro felt that it was suitable for me,<br>
but I finally gave up due to incompatible hardware conditions.<br>
In a word, I have tried a lot of computer technology,<br>
but I don't have a deep understanding of it,<br>
which is both my weakness and my strength.</p>
<p>I am curious about new technologies and interested in open source culture.<br>
I have been involved in programming for less than two years and my technical foundation is still very weak and there is still a long way to go.<br>
I look forward to seeing everyone here continue to learn with me and keep exploring and pursuing the future.<br>
This is the first time to write a blog in English.<br>
If you have any questions, please forgive me.<br>
Your correction is welcome.<br>
Now I'm learning the springboot framework to develop front and rear split web pages<br>
Please feel free to contact me if you have any questions</p>
<p>🔗<br>
My github is <a href="https://github.com/HANXU2018">@HANXU2018</a><br>
My Chinese blog in CSDN site https://hanxu.blog.csdn.net/<br>
✉️ google email h1076998404@Gmial.com<br>
📪QQ mailbox can get my reply faster<br>
1076998404@qq.com</p>
<p>thanks<br>
2020/5/7<br>
🤝🤝🤝</p>
]]></content>
    </entry>
</feed>